---
import { getCollection } from "astro:content";
import HeadLayout from "../../layouts/HeadLayout.astro";

interface Works {
  id: string;
  slug: string;
  body: string;
  collection: "works";
  data: {
    title: string;
    pubDate: Date;
    description?: string;
    author?: string;
    category: string;
    image?: {
      url: string;
      alt: string;
    };
    tags?: string[];
    draft?: boolean;
  };
}

// Calculate reading time based on words per minute
function calculateReadingTime(text: string, wordsPerMinute = 200): number {
  const words = text.split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}
// @ts-expect-error
export async function getStaticPaths({ paginate }) {
  const allPosts: Works[] = await getCollection("works");
  const publishedPosts = allPosts.filter((post) => !post.data.draft);
  const sortedPages = publishedPosts.sort(
    (a: Works, b: Works) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
  );

  return paginate(sortedPages, { pageSize: 8 });
}

const { page }: any = Astro.props;

const { prev, next } = page.url;
const currentPage = page.currentPage;
const totalPages = page.lastPage;
---

<HeadLayout title="twoslashes | Writings">
  <div>
    <h2>Works</h2>
    <p class="text-gray-400">
      Subjects vary. Opinions are my own and are not endorsed or shared by my
      employers or clients.
    </p>
    {
      page.data.length > 0 ? (
        <div>
          <table class="header">
            <thead>
              <tr>
                <th class="width-min"> Date </th>
                <th class="width-auto"> Title </th>
                <th class="width-min"> Category </th>
              </tr>
            </thead>
            <tbody>
              {page.data.map((post: Works) => {
                const pubDate = new Date(post.data.pubDate);
                const month = pubDate.toLocaleString("default", {
                  month: "short",
                });
                const day = pubDate.getDate();
                const year = pubDate.getFullYear();

                const readingTime = calculateReadingTime(post.body); // Calculate reading time

                return (
                  <tr>
                    <td>
                      {month} {day}, {year}
                    </td>
                    <td>
                      <a href={`/works/${post.slug}`}>
                        <strong>{post.data.title}</strong>
                      </a>
                      <p>
                        <em>{readingTime} minute read</em>
                      </p>
                    </td>
                    <td>{post.data.category}</td>
                  </tr>
                );
              })}
            </tbody>
          </table>
          <div class="page-select">
            Page {currentPage} of {totalPages}
            {prev ? <a href={prev}>Prev </a> : " "}
            {next ? <a href={next}>Next </a> : " "}
          </div>
        </div>
      ) : (
        <p>There are no works to display yet. Please check back later.</p>
      )
    }
  </div>
</HeadLayout>
